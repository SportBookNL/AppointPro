name: Build and Test

on:
  pull_request:
    branches: ['main']
  push:
    branches: ['**']

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    env:
      DATABASE_URL: "file:./dev.db"
      NEXTAUTH_SECRET: ${{secrets.NEXTAUTH_SECRET}}
      NEXTAUTH_URL: http://localhost:3000
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY}}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Check if any required environment variables are empty
      - name: Check Environment Variables
        run: |
          missing_vars=()
          
          [ -z "$NEXTAUTH_SECRET" ] && missing_vars+=("NEXTAUTH_SECRET")
          [ -z "$STRIPE_SECRET_KEY" ] && missing_vars+=("STRIPE_SECRET_KEY")
          [ -z "$STRIPE_WEBHOOK_SECRET" ] && missing_vars+=("STRIPE_WEBHOOK_SECRET")
          [ -z "$NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY" ] && missing_vars+=("NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY")
          
          if [ ${#missing_vars[@]} -ne 0 ]; then
            echo "⚠️ WARNING: The following environment variables are empty or not set:"
            for var in "${missing_vars[@]}"; do
              echo "  - $var"
            done
            echo "This may cause issues with your application functionality."
            # Don't fail the build, just warn
          else
            echo "✅ All required environment variables are set."
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'appoint_pro/package-lock.json'

      - name: Create .env file
        run: |
          cd appoint_pro
          echo "DATABASE_URL=\"file:./dev.db\"" >> .env
          echo "NEXTAUTH_SECRET=\"$NEXTAUTH_SECRET\"" >> .env
          echo "NEXTAUTH_URL=\"$NEXTAUTH_URL\"" >> .env
          echo "STRIPE_SECRET_KEY=\"$STRIPE_SECRET_KEY\"" >> .env
          echo "STRIPE_WEBHOOK_SECRET=\"$STRIPE_WEBHOOK_SECRET\"" >> .env
          echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=\"$NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY\"" >> .env
          echo ".env file created successfully"

      - name: Install Dependencies
        run: cd appoint_pro && npm ci

      - name: Run Linter
        run: cd appoint_pro && npm run lint

      - name: Generate Prisma Client
        run: cd appoint_pro && npx prisma generate

      - name: Setup Database (Migrate, Seed & Seed Plans)
        run: cd appoint_pro && npm run db:setup

      # Build once and serve the built app for tests
      - name: Build Next.js App
        run: cd appoint_pro && npm run build -- --no-lint

      - name: Database Status
        run: cd appoint_pro && npm run db:status

      # Cache the .next directory for subsequent steps
      - name: Cache Next.js build output
        uses: actions/cache@v3
        with:
          path: appoint_pro/.next
          key: nextjs-build-${{ github.sha }}

      # - name: Run Cypress E2E Tests
      #   uses: cypress-io/github-action@v6
      #   with:
      #     working-directory: appoint_pro
      #     # No need to build again, reuse the previous build
      #     start: npm start
      #     wait-on: 'http://localhost:3000'
      #     browser: chrome
      #     headless: true

      - name: Cleanup Background Processes
        if: always()
        run: |
          pkill -f "prisma studio" || true
          echo "Background processes cleaned up" 