name: Deploy

on:
  pull_request:
    branches: ['main']
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'appoint_pro/package-lock.json'

      - name: Install Dependencies
        run: cd appoint_pro && npm ci

      - name: Generate Prisma Client
        run: cd appoint_pro && npx prisma generate

      - name: Build Next.js App
        run: cd appoint_pro && npm run build

      - name: Apply Database Migrations
        run: cd appoint_pro && npx prisma migrate deploy

      # For Vercel deployment
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel
        run: |
          cd appoint_pro && vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          cd appoint_pro && vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          cd appoint_pro && vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      # Optional: Sync Stripe subscriptions after deployment
      - name: Sync Stripe Subscriptions
        if: ${{ success() }}
        run: cd appoint_pro && npm run stripe:sync 